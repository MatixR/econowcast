source('E:/Dropbox/Fotis-Loc/17-03-2017/seasonal_arima_check.R', echo=TRUE)
k <- ts(rnorm(N),freq=fq)
k
fq <- 252
N <- fq*5
k <- ts(rnorm(N),freq=fq)
k
fq <- 365
N <- fq*5
k <- ts(rnorm(N),freq=fq)
k
fq <- 52
N <- fq*5
k <- ts(rnorm(N),freq=fq)
k
fq <- 12
N <- fq*5
k <- ts(rnorm(N),freq=fq)
k
fq <- 252
N <- fq*5
k <- ts(rnorm(N),freq=fq)
model <- Arima(k, order=c(1,0,1), seasonal=c(1,0,1),
fixed=c(phi=0.5, theta=0, Phi=0.3, Theta=0))
model <- Arima(k, order=c(1,1,1), seasonal=c(1,1,1),
fixed=c(phi=0.5, theta=0, Phi=0.3, Theta=0))
model <- Arima(k, order=c(1,1,1), seasonal=c(1,1,1))
model$coef
fq <- 412
N <- fq*5
k <- ts(rnorm(N),freq=fq)
model <- Arima(k, order=c(1,1,1), seasonal=c(1,1,1),
fixed=c(phi=0.5, theta=0, Phi=0.3, Theta=0))
model <- Arima(k, order=c(1,1,1), seasonal=c(1,1,1))
fq <- 12
N <- fq*5
k <- ts(rnorm(N),freq=fq)
model <- Arima(k, order=c(1,1,1), seasonal=c(1,1,1),
fixed=c(phi=0.5, theta=0, Phi=0.3, Theta=0))
model
source('E:/Dropbox/Fotis-Loc/17-03-2017/seasonal_arima_check.R', echo=TRUE)
plot(x)
plot(x, type="l")
source('E:/Dropbox/Fotis-Loc/acf-test.R', echo=TRUE)
plot(x, type="l")
rm(list=ls(all=TRUE))
library("fracdiff")
library("forecast")
u1 <- read.csv("E:/Dropbox/Fotis/Data/bac07_13N_RVolMK_190min.csv", header=F)
u2 <- read.csv("E:/Dropbox/Fotis/Data/bac07_13N_RVolMK_1day.csv", header=F)
x <- u1[,2]
y <- u2[,2]
par(mfrow=c(2,1))
acf(y, lag.max=100)
acf(x, lag.max=100)
par(mfrow=c(1,1))
plot(x, type="l")
plot(x, type="l")
source('E:/Dropbox/Fotis-Loc/17-03-2017/seasonal_arima_check.R', echo=TRUE)
source('E:/Dropbox/Fotis-Loc/17-03-2017/seasonal_arima_check.R', echo=TRUE)
source('E:/Dropbox/Fotis-Loc/17-03-2017/seasonal_arima_check.R', echo=TRUE)
source('E:/Dropbox/Fotis-Loc/17-03-2017/seasonal_arima_check.R', echo=TRUE)
source('E:/Dropbox/Fotis-Loc/17-03-2017/seasonal_arima_check.R', echo=TRUE)
source('E:/Dropbox/Fotis-Loc/17-03-2017/seasonal_arima_check.R', echo=TRUE)
acf(x, lag.max=100)
u <- read.csv("E:/Dropbox/Fotis/Data/bac07_13N_RVolMK_1day.csv", header=F)
u <- u[,2]
rm(list=ls(all=TRUE))
library("fracdiff")
library("forecast")
u <- read.csv("E:/Dropbox/Fotis/Data/bac07_13N_RVolMK_1day.csv", header=F)
u <- u[,2]
model <- Arima(u, order=c(1,0,1), seasonal=c(1,0,1))
summary(model)
arima(u, order = c(1,0,0))
arima(u, order = c(1,0,0))
model <- Arima(u, order=c(1,0,1), seasonal=c(1,0,1))
summary(model)
model <- Arima(u, order=c(1,0,1), seasonal=c(1,1,1))
summary(model)
model <- Arima(u, order=c(1,1,1), seasonal=c(1,0,1))
summary(model)
model <- Arima(u, order=c(1,0,0), seasonal=c(1,0,0))
summary(model)
boff <- 200
x <- simulate(model, nsim=N+boff)[(boff+1):(N+boff)]
N <- NROW(u)
boff <- 200
x <- simulate(model, nsim=N+boff)[(boff+1):(N+boff)]
plot(x, type="l")
acf(x, lag.max=100)
source('E:/Dropbox/Fotis-Loc/17-03-2017/seasonal_arima_check.R', echo=TRUE)
source('E:/Dropbox/Fotis-Loc/17-03-2017/seasonal_arima_check.R', echo=TRUE)
source('E:/Dropbox/Fotis-Loc/17-03-2017/seasonal_arima_check.R', echo=TRUE)
source('E:/Dropbox/Fotis-Loc/17-03-2017/seasonal_arima_check.R', echo=TRUE)
source('E:/Dropbox/Fotis-Loc/17-03-2017/seasonal_arima_check.R', echo=TRUE)
plot(x, type="l")
plot(u, type="l")
u <- log(u)
source('E:/Dropbox/Fotis-Loc/17-03-2017/seasonal_arima_check.R', echo=TRUE)
plot(u, type="l")
plot(x, type="l")
model <- Arima(u, order=c(12,0,0), seasonal=c(12,0,0))
summary(model)
model <- Arima(u, order=c(2,0,0), seasonal=c(1,1,1))
summary(model)
model <- Arima(u, order=c(3,0,0), seasonal=c(1,1,1))
summary(model)
model <- Arima(u, order=c(4,0,0), seasonal=c(1,1,1))
summary(model)
N <- NROW(u)
model <- Arima(u, order=c(3,0,0), seasonal=c(3,1,1))
summary(model)
model <- Arima(u, order=c(3,0,0), seasonal=c(3,0,1))
summary(model)
rm(list=ls(all=TRUE))
library("fracdiff")
library("forecast")
u <- read.csv("E:/Dropbox/Fotis/Data/bac07_13N_RVolMK_1day.csv", header=F)
u <- u[,2]
plot(u, type="l")
acf(u, lag.max=100)
u <- read.csv("E:/Dropbox/Fotis/Data/bac07_13B_RvolMK_6_des.csv", header=F)
u <- read.csv("E:/Dropbox/Fotis-Loc/bac07_13B_RvolMK_6_des.csv", header=F)
u <- u[,2]
plot(u, type="l")
u <- read.csv("E:/Dropbox/Fotis-Loc/bac07_13B_RvolMK_6_des.csv", header=F)
View(u)
u <- u[,3]
u <- read.csv("E:/Dropbox/Fotis-Loc/bac07_13B_RvolMK_6_des.csv", header=F)
u <- u[,3]
plot(u, type="l")
acf(u, lag.max=100)
acf(u, lag.max=1000)
acf(u, lag.max=3000)
acf(u, lag.max=NROW(u)/2)
acf(u, lag.max=2500)
u <- read.csv("E:/Dropbox/Fotis/Data/bac07_13B_RVolMK_1day.csv", header=F)
View(u)
u <- u[,2]
plot(u, type="l")
acf(u, lag.max=2500)
acf(u, lag.max=200)
acf(u, lag.max=100)
spec.pgram(u)
spectrum(u)
acf(u, lag.max=100)
spectrum(u)
u <- read.csv("E:/Dropbox/Fotis-Loc/bac07_13N_RvolMK_2_des.csv", header=F)
u <- u[,3]
acf(u, lag.max=100)
spectrum(u)
d <- fracdiff(u)$d
d
function (n, ar = NULL, ma = NULL, d, rand.gen = rnorm, innov = rand.gen(n +
q, ...), n.start = NA, backComp = TRUE, allow.0.nstart = FALSE,
start.innov = rand.gen(n.start, ...), ..., mu = 0)
a1 <- fracdiff.sim(n=3000, ar = NULL, ma = NULL, d=0.45)$series
a1 <- fracdiff.sim(n=3000, ar = NULL, ma = NULL, d=0.45)$series
spectrum(a1)
library("arfima")
install.packages("arfima")
acf(u, lag.max=100)
acf(u, lag.max=200)
u <- read.csv("E:/Dropbox/Fotis/Data/bac07_13N_RVolMK_1day.csv", header=F)
u <- u[,2]
acf(u, lag.max=200)
spectrum(u)
install.packages("devtools")
devtools::install_github("robjhyndman/anomalous-acm")
library("anomalous-acm")
install.packages("ifultools")
devtools::install_github("robjhyndman/anomalous-acm")
install.packages(c("sapa", "ForeCA"))
devtools::install_github("robjhyndman/anomalous-acm")
install.packages(c("tripack", "alphahull"))
devtools::install_github("robjhyndman/anomalous-acm")
library("anomalous-acm")
library("anomalousACM")
z <- ts(matrix(rnorm(3000),ncol=100),freq=4)
library("anomalousACM", lib.loc="D:/R-3.3.2/library")
z <- ts(matrix(rnorm(3000),ncol=100),freq=4)
y <- tsmeasures(z)
y
biplot.features(y)
install.packages("mvtnorm")
biplot.features(y)
anomaly(y)
install.packages("ks")
anomaly(y)
install.packages("Ecdat")
install.packages("Ecdat")
library("Ecdat")
data(Pricing)
k <-data(Pricing)
rm(list=ls(all=TRUE))
library("Ecdat")
k <- data(Pricing)
data(Klein)
r1
head(Pricing)
Pricing
k <- Pricing
write.csv("E:/Dropbox/QUB-Teaching/FIN7028-TimeSeries/Year 4 - 2016_2017/Lecture8-VAR/sp.csv")
write.csv(k, "E:/Dropbox/QUB-Teaching/FIN7028-TimeSeries/Year 4 - 2016_2017/Lecture8-VAR/sp.csv")
k <- as.matrix(Pricing)
write.csv(k, "E:/Dropbox/QUB-Teaching/FIN7028-TimeSeries/Year 4 - 2016_2017/Lecture8-VAR/sp.csv")
k <- as.double(Pricing)
k <- as.matrix(Pricing)
time(k)
library(zoo)
as.yearmon(time(k))
library(lubridate)
as.numeric(time(k))
date_decimal(k)
tt <- as.numeric(time(k))
write.csv(cbind(tt,k), "E:/Dropbox/QUB-Teaching/FIN7028-TimeSeries/Year 4 - 2016_2017/Lecture8-VAR/sp.csv")
install.packages("vars")
library(vars)
k[c('r1', 'r5', 'r10')]
k[,c('r1', 'r5', 'r10')]
VAR(k[,c('r1', 'r5', 'r10')], p=1)
summary(VAR(k[,c('r1', 'r5', 'r10')], p=1))
install.packages("installr")
if(!require(installr)) { install.packages("installr"); require(installr)} #load / install+load installr
updateR(F, T, T, F, T, F, T) # install, move, update.package, quit R.
prop.test(c(1556, 1671), c(2455, 2730))
prop.test(c(0.56*5159, 0.55*4402), c(5159, 4402))
install.packages("RandPro")
library(RandPro)
mat <- form_gauss_matrix(600,1000,FALSE)
head(mat)
NROW(mat)
dim(mat)
mat <- form_gauss_matrix(300,100000,TRUE,0.5)
dim(mat)
mat <- form_gauss_matrix(300,100000,TRUE)
dim(mat)
source('~/.active-rstudio-document', echo=TRUE)
tickers <- c("SPY", "SDS")
end.date <- as.character(as.Date(Sys.time(),format="%Y-%m-%d"))
start.date <- as.character("2000-01-01")
library("TTR")
end.date
start.date
end.date2 <- strsplt(end.date, "")
tickers <- c("SPY", "SDS")
end.date <- as.character(as.Date(Sys.time(),format="%Y-%m-%d"))
start.date <- as.character("2000-01-01")
data.all <- data.loading(tickers, start.date, end.date, track = TRUE)
prices <- data.all$adj.close
tickers <- c("SPY", "SDS")
end.date <- as.character(as.Date(Sys.time(),format="%Y-%m-%d"))
start.date <- as.character("2000-01-01")
end.date2 <- strsplt(end.date, "")
end.date2 <- strsplit(end.date, "")
end.date2
end.date2 <- strsplit(end.date, "-")
end.date2
end.date2 <- unlist(strsplit(end.date, "-"))
end.date2
end.date2 <- as.numeric(paste(end.date2[1], end.date2, end.date3), sep="")
end.date2 <- as.numeric(paste(end.date2[1], end.date2[2], end.date2[3]), sep="")
end.date2 <- unlist(strsplit(end.date, "-"))
end.date2
end.date2[1]
end.date2[2]
end.date2[3]
paste(end.date2[1], end.date2[2], end.date2[3], sep="")
end.date2 <- as.numeric(paste(end.date2[1], end.date2[2], end.date2[3], sep=""))
end.date2
start.date2 <- unlist(strsplit(start.date, "-"))
start.date2 <- as.numeric(paste(start.date2[1], start.date2[2], start.date2[3], sep=""))
start.date2
track <- TRUE
library("TTR")
end.date2 <- unlist(strsplit(end.date, "-"))
end.date2 <- as.numeric(paste(end.date2[1], end.date2[2], end.date2[3], sep=""))
start.date2 <- unlist(strsplit(start.date, "-"))
start.date2 <- as.numeric(paste(start.date2[1], start.date2[2], start.date2[3], sep=""))
out <- getYahooData(tickers, start.date2, end.date2, quiet=track)
i <- 1
out <- getYahooData(tickers[i], start.date2, end.date2, quiet=track)
end.date
as.Date(end.date)
as.numeric(as.Date(end.date))
i <- 1
end.date2 <- unlist(strsplit(end.date, "-"))
end.date2 <- as.numeric(paste(end.date2[1], end.date2[2], end.date2[3], sep=""))
symb <- tickers[i]
symb <- tickers[i]
symb
symb <- tickers[i]
p1 <- "https://finance.yahoo.com/quote/"
p2 <- "/history?p="
pp <- paste(p1, symb, p2, symb, sep="")
pp
thepage <- readLines(pp)
thepage <- read.csv(pp)
install.packages("rvest")
library("rvest")
pp <- paste(p1, symb, p2, symb, sep="")
pp
ht <- html_text(pp, trim = FALSE)
ht <- pp %>% html_text() %>% as.numeric()
ht <- pp %>% html_text() %>% as.numeric()
pp
pg <- read_html(pp)
head(html_attr(html_nodes(pg, "a"), "href"))
pg
html_attr(html_nodes(pg, "a"), "href")
html_nodes(pg, "a")
html_attr(html_nodes(pg, "a"), "href")
k <- html_nodes(pg, "a")
k
html_attr(html_nodes(pg, "a"), "href")
library("quantmod")
getSymbols("XLF", from="2016-09-13")
library(RCurl)
getHTMLLinks(pp)
links <- function(URL)
{
getLinks <- function() {
links <- character()
list(a = function(node, ...) {
links <<- c(links, xmlGetAttr(node, "href"))
node
},
links = function() links)
}
h1 <- getLinks()
xData <- getURL(URL)
htmlTreeParse(xData, handlers = h1)
h1$links()
}
links(pp)
library(XML)
links <- function(URL)
{
getLinks <- function() {
links <- character()
list(a = function(node, ...) {
links <<- c(links, xmlGetAttr(node, "href"))
node
},
links = function() links)
}
h1 <- getLinks()
xData <- getURL(URL)
htmlTreeParse(xData, handlers = h1)
h1$links()
}
links(pp)
getSymbols("XLF", from="2016-09-13")
source('E:/Dropbox/Quantf-New-Web-E/Pairs-Trading/pairs-trading-quantf.R', echo=TRUE)
warnings()
out12
pseudoP
critP
critP
all.old.all$cum.return
out12 <- round(all.old.all$cum.return, 6)
out12
out12 <- rbind(matrix(0, 1, NCOL(out12)), out12)
out12
rownames(out12)[1] <- as.character(as.Date(rownames(out12)[2])-1)
pseudoP <- 1000
out12[,1:NCOL(out12)] <- pseudoP*(1+as.matrix(apply(out12[,1:NCOL(out12)], 2, as.numeric)))
out12
critP <- min(as.matrix(apply(out12[,1:NCOL(out12)], 2, as.numeric)))
critP
while(critP<0){
pseudoP <- pseudoP+500
out12[,1:NCOL(out12)] <- pseudoP*(1+as.matrix(apply(out12[,1:NCOL(out12)], 2, as.numeric)))
critP <- min(as.matrix(apply(out12[,1:NCOL(out12)], 2, as.numeric)))
}
out12
out12 <- round(all.old.all$cum.return, 6)
out12 <- rbind(matrix(0, 1, NCOL(out12)), out12)
rownames(out12)[1] <- as.character(as.Date(rownames(out12)[2])-1)
pseudoP <- 1000
out12
out12[,1:NCOL(out12)] <- pseudoP*(1+as.matrix(apply(out12[,1:NCOL(out12)], 2, as.numeric)))
out12
critP <- min(as.matrix(apply(out12[,1:NCOL(out12)], 2, as.numeric)))
critP
out12 <- round(all.old.all$cum.return, 6)
out12 <- rbind(matrix(0, 1, NCOL(out12)), out12)
rownames(out12)[1] <- as.character(as.Date(rownames(out12)[2])-1)
pseudoP <- 1000
temp.sav <- out12
out12[,1:NCOL(out12)] <- pseudoP*(1+as.matrix(apply(out12[,1:NCOL(out12)], 2, as.numeric)))
critP <- min(as.matrix(apply(out12[,1:NCOL(out12)], 2, as.numeric)))
critP
pseudoP <- pseudoP+500
pseudoP
out12[,1:NCOL(out12)] <- pseudoP*(1+as.matrix(apply(temp.sav[,1:NCOL(temp.sav)], 2, as.numeric)))
critP <- min(as.matrix(apply(out12[,1:NCOL(out12)], 2, as.numeric)))
critP
pseudoP <- pseudoP+500
out12[,1:NCOL(out12)] <- pseudoP*(1+as.matrix(apply(temp.sav[,1:NCOL(temp.sav)], 2, as.numeric)))
critP <- min(as.matrix(apply(out12[,1:NCOL(out12)], 2, as.numeric)))
critP
pseudoP <- pseudoP+500
out12[,1:NCOL(out12)] <- pseudoP*(1+as.matrix(apply(temp.sav[,1:NCOL(temp.sav)], 2, as.numeric)))
critP <- min(as.matrix(apply(out12[,1:NCOL(out12)], 2, as.numeric)))
critP
###### new output for the new graphs!! #######
out12 <- round(all.old.all$cum.return, 6)
out12 <- rbind(matrix(0, 1, NCOL(out12)), out12)
rownames(out12)[1] <- as.character(as.Date(rownames(out12)[2])-1)
pseudoP <- 1000
temp.sav <- out12
out12[,1:NCOL(out12)] <- pseudoP*(1+as.matrix(apply(out12[,1:NCOL(out12)], 2, as.numeric)))
out12
out12[,1:NCOL(out12)] <- pseudoP*(1+as.matrix(apply(out12[,1:NCOL(out12)], 2, as.numeric)))
min(out12)
out12 <- round(all.old.all$cum.return, 6)
out12 <- rbind(matrix(0, 1, NCOL(out12)), out12)
rownames(out12)[1] <- as.character(as.Date(rownames(out12)[2])-1)
min(out12)
View(out12)
all.old.all$statistics[,c("QuantfStrategy6","TNA", "TZA")]
all.old.all$statistics[,c("QuantfStrategy7","TNA", "TLT")]
all.old.all$statistics[,c("QuantfStrategy8","FAS", "FAZ")]
###### new output for the new graphs!! #######
out12 <- round(all.old.all$cum.return, 6)
out12 <- rbind(matrix(0, 1, NCOL(out12)), out12)
rownames(out12)[1] <- as.character(as.Date(rownames(out12)[2])-1)
pseudoP <- 1000000
temp.sav <- out12
out12[,1:NCOL(out12)] <- pseudoP*(1+as.matrix(apply(out12[,1:NCOL(out12)], 2, as.numeric)))
critP <- min(as.matrix(apply(out12[,1:NCOL(out12)], 2, as.numeric)))
critP
###### new output for the new graphs!! #######
out12 <- round(all.old.all$cum.return, 6)
out12 <- rbind(matrix(0, 1, NCOL(out12)), out12)
rownames(out12)[1] <- as.character(as.Date(rownames(out12)[2])-1)
do.the.check <- 0
if(do.the.check>0){
pseudoP <- 1000000
temp.sav <- out12
out12[,1:NCOL(out12)] <- pseudoP*(1+as.matrix(apply(out12[,1:NCOL(out12)], 2, as.numeric)))
critP <- min(as.matrix(apply(out12[,1:NCOL(out12)], 2, as.numeric)))
while(critP<0){
pseudoP <- pseudoP+500
out12[,1:NCOL(out12)] <- pseudoP*(1+as.matrix(apply(temp.sav[,1:NCOL(temp.sav)], 2, as.numeric)))
critP <- min(as.matrix(apply(out12[,1:NCOL(out12)], 2, as.numeric)))
}
}
out12[,c("QuantfStrategy1","SPY", "SDS")]
source('E:/Dropbox/BD2/Task3/R/2-ui/2a.R', echo=TRUE)
View(xmr)
d1
tsd <- "2013-01-01 2015-01-01"
kwd <- kwd1
stp <- "web"
mtitle1 <- paste(kwd, stp, sep=", ")
gt <- gtrends(kwd, reg, tsd, stp, cct)
x1 <- gt$interest_over_time$hits
d1 <- gt$interest_over_time$date
tsd <- "2014-01-01 2017-01-01"
kwd <- kwd1
stp <- "web"
mtitle1 <- paste(kwd, stp, sep=", ")
gt <- gtrends(kwd, reg, tsd, stp, cct)
x2 <- gt$interest_over_time$hits
d2 <- gt$interest_over_time$date
d1
d2
